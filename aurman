#!/bin/bash

#argument parsing

#number of command line flags specified
flagcount=0
# force update?
force=0
# remove rather than isntall?
remove=0
#number of args that are not flags
extra_args=0

while getopts ":fur" opt; do
	case $opt in
	f)
		echo "Force!"
		force=1
		((flagcount++))
		;;
	u)
		sudo -k pacman -Syu
		((flagcount++))
		;;
	r)
		remove=1
		((flagcount++))
		;;
	\?)
		echo "invalid option!"
		;;
	esac
done

cd ~/aur/packages

extra_args=$(($# - flagcount))

#remove flags from args
if ((extra_args > 0)); then
	shift $flagcount
fi

if ((remove == 1)); then
	if ((extra_args == 0)); then
		echo "ERROR: specifiy at least 1 package to remove!"
		exit 1
	fi

	echo "number of args $extra_args"
	for pkg in "$@"
	do
		echo "removing $pkg"
		if [ -d "$pkg" ]; then
			echo "found aur download, removing..."
			rm -rf $pkg
		fi
		sudo -k pacman -Rns $pkg
	done

	exit 0
fi

# get names of packages to be updated
# if there are more cmd args than flags parsed, the remaining are treated as package names
if ((extra_args > 0)); then
	DIRECTS="$@"
# if no option or only flags are specified, update all
else
	DIRECTS="$(ls -I *.sh)" 
fi
echo directories: $DIRECTS
# turn space delimited list into newline delimited list for easy iteration and remove any flags given
DIRECTS=$(echo $DIRECTS | tr ' ' '\n' | grep -e '^-' -v)
echo directories: $DIRECTS

#iterate over packages and update each
for DIRECT in $DIRECTS
do
	#check if package directory already exists (update) or not (install)
	if [ -d $DIRECT ]; then
	# package exists, we need to update
		echo updating $DIRECT
		if [ "$force" -eq "1" ]; then
			# force update
			echo removing old install files
			rm -rf ./$DIRECT
			echo cloning aur repo package
			git clone https://aur.archlinux.org/$DIRECT.git
	  else
	  	# if no force, update git repo
	  	cd $DIRECT
	  	git pull
	  	cd ..
		fi
	else
		echo installing $DIRECT
		git clone https://aur.archlinux.org/$DIRECT.git
	fi
	echo `pwd`
	cd $DIRECT
	echo running makepkg
	makepkg -si --needed
	echo makepkg return $?
	sudo -k
	cd ..

done
echo done
